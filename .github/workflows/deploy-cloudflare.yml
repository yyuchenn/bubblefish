name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - 'preview_*'
  pull_request:
    branches:
      - main
  release:
    types: [published, prereleased]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  RUST_VERSION: 'stable'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      deployments: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: wasm32-unknown-unknown

      - name: Install Rust nightly for WASM threads
        run: |
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install build dependencies
        run: |
          # Install wasm-pack if not present
          if ! command -v wasm-pack &> /dev/null; then
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          fi
          # Install Yarn
          npm install -g yarn

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            frontend/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build web application
        run: python build.py web-build
      
      - name: Build plugins for web
        run: python build.py plugin-build

      - name: Copy deployment headers
        run: cp deploy/cloudflare/_headers frontend/build/_headers

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: pages deploy frontend/build --project-name=bubblefish --branch=${{ github.event_name == 'release' && 'main' || (github.ref == 'refs/heads/main' && 'preview' || github.head_ref || github.ref_name) }} --commit-dirty=true

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = process.env.CF_PAGES_URL;
            if (deploymentUrl) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ Preview deployment ready at: ${deploymentUrl}`
              });
            }